(()=>{"use strict";var t={772:(t,e,n)=>{n.d(e,{Z:()=>a});var i=n(537),s=n.n(i),o=n(645),r=n.n(o)()(s());r.push([t.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    height: 100vh;\n    width: 100vw;\n    background-color: aliceblue;\n}\n.sign-up-form{\n    height: 500px;\n    width: 500px;\n    display: flex;\n    justify-content: space-around;\n    flex-direction: column;\n    margin: 20px;\n}\n.sign-up-form input{\n    border: 2px solid grey;\n}\n.submit-form-button{\n    height: 50px;\n    width: 100px;\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,2BAA2B;AAC/B;AACA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,6BAA6B;IAC7B,sBAAsB;IACtB,YAAY;AAChB;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,YAAY;IACZ,YAAY;AAChB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    height: 100vh;\n    width: 100vw;\n    background-color: aliceblue;\n}\n.sign-up-form{\n    height: 500px;\n    width: 500px;\n    display: flex;\n    justify-content: space-around;\n    flex-direction: column;\n    margin: 20px;\n}\n.sign-up-form input{\n    border: 2px solid grey;\n}\n.submit-form-button{\n    height: 50px;\n    width: 100px;\n}"],sourceRoot:""}]);const a=r},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,s,o){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(i)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(r[d]=!0)}for(var l=0;l<t.length;l++){var u=[].concat(t[l]);i&&r[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),s&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=s):u[4]="".concat(s)),e.push(u))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(s," */"),r=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(r).concat([o]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var o={},r=[],a=0;a<t.length;a++){var d=t[a],l=i.base?d[0]+i.base:d[0],u=o[l]||0,p="".concat(l," ").concat(u);o[l]=u+1;var c=n(p),h={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==c)e[c].references++,e[c].updater(h);else{var f=s(h,i);i.byIndex=a,e.splice(a,0,{identifier:p,updater:f,references:1})}r.push(p)}return r}function s(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,s){var o=i(t=t||[],s=s||{});return function(t){t=t||[];for(var r=0;r<o.length;r++){var a=n(o[r]);e[a].references--}for(var d=i(t,s),l=0;l<o.length;l++){var u=n(o[l]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}o=d}}},569:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,s&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(i){var s=e[i];if(void 0!==s)return s.exports;var o=e[i]={id:i,exports:{}};return t[i](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),i=n(795),s=n.n(i),o=n(569),r=n.n(o),a=n(565),d=n.n(a),l=n(216),u=n.n(l),p=n(589),c=n.n(p),h=n(772),f={};f.styleTagTransform=c(),f.setAttributes=d(),f.insert=r().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=u(),e()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals;let m=function(){this.email,this.country,this.zip,this.password,this.passwordConfirm,this.messages=[],this.form=document.querySelector(".sign-up-form"),this.submitButton=document.querySelector(".submit-form-button"),this.messagesDiv=document.querySelector(".messages"),this.emailInput=document.querySelector("#email"),this.countryInput=document.querySelector("#country"),this.zipInput=document.querySelector("#zip"),this.passInput=document.querySelector("#password"),this.passConfInput=document.querySelector("#passwordConfirm")};m.prototype.addMessage=function(t){this.messages.push(t)},m.prototype.displayMessages=function(){this.messagesDiv.textContent=this.messages.join(", "),this.messages=[]},m.prototype.getCurrentForm=function(){this.email=email.value,this.country=country.value,this.zip=zip.value,this.password=password.value,this.passwordConfirm=passwordConfirm.value},m.prototype.submitForm=function(){let t=!1;return this.messagesDiv.textContent="",this.getCurrentForm(),this.validateForm()&&(t=!0),this.displayMessages(),t},m.prototype.invalidEmailField=function(){this.emailInput.style.border="2px solid red"},m.prototype.invalidCountryField=function(){this.countryInput.style.border="2px solid red"},m.prototype.invalidZipField=function(){this.zipInput.style.border="2px solid red"},m.prototype.invalidPassField=function(){this.passInput.style.border="2px solid red"},m.prototype.invalidPassConfField=function(){this.passConfInput.style.border="2px solid red"},m.prototype.validEmailField=function(){this.emailInput.style.border="2px solid grey"},m.prototype.validCountryField=function(){this.countryInput.style.border="2px solid grey"},m.prototype.validZipField=function(){this.zipInput.style.border="2px solid grey"},m.prototype.validPassField=function(){this.passInput.style.border="2px solid grey"},m.prototype.validPassConfField=function(){this.passConfInput.style.border="2px solid grey"},m.prototype.validateEmail=function(){let t=!0;return""!=this.email&&null!=this.email||(this.addMessage("Email field should not be blank"),t=!1),this.email.includes("@")&&this.email.includes(".com")||(this.addMessage("Email is not a valid email"),t=!1),!0===t?this.validEmailField():this.invalidEmailField(),t},m.prototype.validateCountry=function(){let t=!0;return""!=this.country&&null!=this.country||(this.addMessage("Country field should not be blank"),t=!1),!0===t?this.validCountryField():this.invalidCountryField(),t},m.prototype.validateZip=function(){let t=!0;return 5!=this.zip.length&&(this.addMessage("Zip Code should be 5 digits"),t=!1),!0===t?this.validZipField():this.invalidZipField(),t},m.prototype.validatePassword=function(){let t=!0,e=!0;return this.password!=this.passwordConfirm&&(this.addMessage("Passwords do not match"),t=!1,e=!1),""!=this.password&&null!=this.password||(this.addMessage("Password field cannot be blank"),t=!1),""!=this.passwordConfirm&&null!=this.passwordConfirm||(this.addMessage("Password Confirm field cannot be blank"),e=!1),!0===t?this.validPassField():this.invalidPassField(),!0===e?this.validPassConfField():this.invalidPassConfField(),!1!==t&&!1!==e},m.prototype.validateForm=function(){let t=!0;return 0==this.validateEmail()&&(t=!1),0==this.validateCountry()&&(t=!1),0==this.validateZip()&&(t=!1),0==this.validatePassword()&&(t=!1),t};let y=new m;y.submitButton.addEventListener("click",(()=>{y.submitForm()&&y.addMessage("High five! The form is valid!"),y.displayMessages()})),y.form.querySelectorAll("input").forEach((t=>{t.addEventListener("input",(()=>{y.submitForm()}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,